import arza:lang:_map
import string
import seq
import std

std:TEq(Map)
extend Map
    def put (self, k, v) as std_behavior:put
    def del (self, el) as std_behavior:del
    def has (self, el) as std_behavior:has
    def is_empty (self) as std_behavior:is_empty

    def repr(self) = str(self)

    def str(self) =
        let fun _joiner((fst, snd)) =
                str(fst) ++ "=" ++ repr(snd)
        in "{"
                ++ string:join_with(", ", to_seq(self), _joiner) ++
           "}"

    def to_seq(self) = _map:to_list(self)

    def keys(self) = seq:map(at(_, 0), to_seq(self))
    def values(self) = seq:map(at(_, 1), to_seq(self))
