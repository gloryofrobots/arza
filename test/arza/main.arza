import lib.math

class X =
    fun x(self, x) =
        self.{_x = x}

class Y(X) =
    nil
//class Y(X) =
//    fun xy(self, x, y) =
//        self.super().x(x)
//        self.{y = y}

//class Pair =
//    fun __init__(self, first, second) =
//        self.{first = first, second = second}
//
//    fun __add__(self, other) =
//        let f = self.first + other.first
//        let s = self.second + other.second
//        Pair(f, s)
//
//    fun sum(self) =
//        self.first + self.second


fun main() =
    let x = X()
    print(X.type())
    print(X.parent())
    print(x.type())
    print(x.parent())

//    X.x(1)
//    print(x.type())
//    print(Y)
//    print(Y._x)
//    print(Y.type())
//    print(Y.parent())
//    print(Y.super())
//    print(1.super())
//    Y.xy(1,2)
//    let p = Pair(1, 2)
//    print(p.sum())
//    p.{x = 1}
//    print(p.x)


    __env__()

//PL(__env__())
