import io
import affirm
import seq
import string
import list

//import tests:test_operators

//import tests:test_expressions
//import tests:test_match
//import tests:test_exception
//import tests:test_static_refs
//import tests:test_operator_override
//import tests:test_import
//import tests:test_fun
//import tests:stdtype:test_stdtype
//import tests:usertype:test_usertype
//import tests:test_fiber

//import tests:test_partial


fun log(...msgs) =
    if True then
       apply(io:print, msgs)
    else
        ()

fun test() =
(
    log("RUN TESTS")

//    log("TEST EXPRESSIONS")
//    test_expressions:test()
//
//    log("TEST MATCH")
//    test_match:test()
//
//    log("TEST EXCEPTION")
//    test_exception:test()
//
//    log("TEST STATIC REFS")
//    test_static_refs:test()
//
//    log("TEST IMPORT")
//    test_import:test()
//
//    log ("TEST OP OVERRIDE")
//    test_operator_override:test()
//
//    log("TEST FUN")
//    test_fun:test()
//
//    log("TEST STD TYPES")
//    test_stdtype:test()
//
//    log("TEST TYPES")
//    test_usertype:test()
//
//    log("TEST FIBER")
//    test_fiber:test()

//
//    log "TEST LAZY"
//    test_lazy:test()
//    log "TEST PARTIAL"
//    test_partial:test()

//    log "TEST OPERATORS"
//    test_operators:test()
)

fun add(x, y) = x + y
fun mul(x, y) = x * y

fun one () = 1

fun main() =
(
    let
        add1 = (&add)(1)
    in
    (
        io:print(add1(41))
    )
    test()
)
