import lalan:lang:_tuple
import string
import std

extend Tuple with
(
    def {==, !=, put, at, del, elem, len, is_empty} from std:Behavior

    def ++ as _tuple:concat
    def prepend as _tuple:prepend
    def to_seq as _tuple:to_list
    def slice as _tuple:slice
    def drop as _tuple:drop
    def take as _tuple:take

    def index_of as _tuple:index_of

    def repr(self) = str(self)
    def str(self) =
        if len(self) == 1 then
            "(" ++ repr(at(0, self)) ++ ",)"
        else
            "(" ++ string:join_with(repr, to_seq(self), ", ") ++ ")"
)

fun ensure_tuple
    | t of Tuple = t
    | v = (v,)

fun split
    | ((x)) = (x, ())
    | ((x, ...rest)) = (x, rest)
