

load affirm
//load tests.test_base
//load tests.test_static_refs
//load tests.test_bool
//load tests.datastructs.test_datastructs
//load tests.test_operators
//load tests.test_co
//load tests.test_destruct
//load tests.test_exception
//load tests.test_def
//load tests.test_generic
//load tests.test_match
//load tests.test_modify
//load tests.test_module
//load tests.test_operator_override
//load tests.test_trait

load lists
load seq

def main() ->
//    print("START TEST")
//    l = [1,2,3,4,5,6,7,8]
//    affirm.is_equal(seq.cons(0, l), [0,1,2,3,4,5,6,7,8])
//    affirm.is_equal(seq.cons(-1, seq.cons(0, l)), [-1,0,1,2,3,4,5,6,7,8])
//    affirm.is_equal(seq.tail(l), [2,3,4,5,6,7,8])
//    affirm.is_equal(seq.tail(seq.tail(l)), [3,4,5,6,7,8])
//    affirm.is_equal(seq.tail(seq.tail([1,2])), [])
//    affirm.is_true(seq.is_empty([]))
//    affirm.is_false(seq.is_empty([1,2]))
//    affirm.is_equal(seq.empty(), [])
//
    l1 = [0,1,2,3,4,5,6,7,8,9]
//    affirm.is_equal(seq.length(l1), 10)
//    affirm.is_equal(seq.concat([0,1,2,3,4,5], [6,7,8,9]), l1)
//    affirm.is_equal(seq.concat([], l1), l1)
//    affirm.is_equal(seq.concat(l1, []), l1)
//    affirm.is_equal(seq.concat([], []), [])
//    affirm.is_equal(seq.reverse(l1), [9,8,7,6,5,4,3,2,1,0])
//

//    affirm.is_true(seq.prefix([1,2,3,4], [1,2,3,4,5,6]))
//    affirm.is_false(seq.prefix([0,1,2,3,4], [1,2,3,4,5,6]))
//    affirm.is_false(seq.prefix([1,2,3,4], [1,2,3,5,4,6]))
//
//    affirm.is_true(seq.suffix([4,5,6], [1,2,3,4,5,6]))
//    affirm.is_false(seq.suffix([3,5,6], [1,2,3,4,5,6]))
//    affirm.is_false(seq.suffix([4,5,6], [1,2,3,4,6,5]))

    affirm.is_equal(seq.drop(3, l1), [3,4,5,6,7,8,9])
    affirm.is_equal(seq.map(fun (x) -> x+1 end, l1), [1,2,3,4,5,6,7,8,9,10])
    affirm.is_equal(seq.intersperse(0, l1), [0,0,1,0,2,0,3,0,4,0,5,0,6,0,7,0,8,0,9,0])
//    test_operators.test()
//    test_static_refs.test()
//    test_bool.test()
//    test_base.test()
//    test_datastructs.test()
//    test_co.test()
//    test_destruct.test()
//    test_exception.test()
//    test_def.test()
//    test_generic.test()
//    test_match.test()
//    test_modify.test()
//    test_module.test()
//    test_operator_override.test()
//    test_trait.test()
end
