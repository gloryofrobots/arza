import affirm
//import tests:test_base
//import tests:test_static_refs
//import tests:test_bool
//import tests:test_co
//import tests:test_destruct
//import tests:test_exception
//import tests:test_fun
//import tests:test_generic
//import tests:test_modify
//import tests:test_operator_override
//import tests:test_module
//import tests:test_trait
//import tests:test_match
//import tests:test_operators
//import tests:datastructs:test_datastructs
//import list

type Zero
---------

type Point2 x y
    construct
    | {x, y}
    | (x, y)
    | x -> y = x
    | x y
    -------------
---------


trait Num self
    method is_zero self
    method add self a
----

// TODO error here 2 % 0
fun main () ->
    p = Point2 0 1
    p1 = Point2 42
    print (Point2 0 1) (Point2 42) (Point2 {x=33, y=34})
//    test_base:test()
//    test_static_refs:test()
//    test_bool:test()
//    test_co:test()
//    test_destruct:test()
//    test_exception:test()
//    test_fun:test()
//    test_generic:test()
//    test_modify:test()
//    test_operator_override:test()
//    test_module:test()
//    test_trait:test()
//    test_match:test()
//    test_operators:test()
//    test_datastructs:test()
end
