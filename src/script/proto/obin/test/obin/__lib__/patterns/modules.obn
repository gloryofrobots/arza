import log
import utils.errors

unit database
    import error, info, log
    export new, insert, update, delete, DbRecord

    trait DbRecord
    def new(record of Map) ->
        record isa DbRecord end

    def insert() end
    def update() end
    def delete() end

    generic _tostring_ (self of DbRecord) ->
        "<DbRecord" ++ tostring(self as Map) ++ ">"
    end
end

unit NumberInfo
    import error, log, country_code
    def create(number) ->
        number isa NumberInfo end

    generic _tostring_ (self of DbRecord) ->
        "<NumberInfo" ++ tostring(self as Number) ++ ">" end
end


unit PhoneBook
    import error, log
    export db.insert as insert, db.new as new, info.create as create_number_info

    install NumberInfo as info
        with country_code = 12;

    install Database as db with
        error=error
        log=log;

    def save_number(number) ->
        num_info = info.create(number)
        db.insert(num_info);;



