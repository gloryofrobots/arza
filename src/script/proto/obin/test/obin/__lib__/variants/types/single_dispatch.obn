type Zero

type Point2 x y
    construct
    | x y
    | x -> y = x
    -------------

type Vec2 p1 p2
    construct
    | p1 of Point2, p2 of Point2
    | x1 y1 x2 y2 -> p1 = Point2 x y; p2 = Point2 x2 y2;
    | p2 @ p1
    -----------

trait Num self
    method is_zero self
    method add self a
---------------

implement Num for Point2
    method is_zero
        | self -> self.x == 0 and self.y == 0
    method add
        | self p2 of Point2 -> Point2 (self.x + p2.x) (self.y + p2.y)
        | self v of Vec2 -> add (Vec2 self) v
---------------------------


implement Num for Zero
    method is_zero
        | self -> true
    method add
        | self i of Num -> i
------------

implement Num for Num
    method is_zero
        | self -> true
    method add
        | self i of Zero -> i
------------

