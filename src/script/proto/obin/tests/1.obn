trait Animal
origin Human(name, surname) {
    print(Human)
    return ((Human, Animal), {name:name, surname:surname})
}
print(Human)

h = Human("Bob", "Alice")
//print(h)

l = 1:2:3:4:5
print(l)
return nil

def coroutine(fn) {
    (fiber1, fiber2) = spawn_fiber()
    first_call = false
    return func(...args) {
        outer first_call
        if first_call == false {
            first_call = true
            activate_fiber(fiber2, func(){
                fn(fiber1, ...args)
            })
        } else {
            fiber2(...args)
        }
    }
}

 co = coroutine(func(yield, x) {
           Z = "1111"

           _co1 = coroutine(func(yield2, y) {
               Y = "2222"
               def send() {
                    X = "3333"
                    yield2(42 + y)
               }
               send()
           })

        print("x", x)
        v = _co1(x)
        t = yield(v)
        print("t", t)
        x = yield(t)
        print("x", x)
        return x
      })

print(co(23))
print(co(34))
print(co(44))


