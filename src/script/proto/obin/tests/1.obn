fn coroutine(func) {
    (fiber1, fiber2) = spawn_fiber()
    first_call = false
    return fn(...args) {
        outer first_call
        if first_call == false {
            first_call = true
            activate_fiber(fiber2, fn(){
                func(fiber1, ...args)
            })
        } else {
            fiber2(...args)
        }
    }
}

co = coroutine(fn(yield, x) {
            print("x", x)
            (x,y,z)  = yield(25);
            yield(15 + x)
            x + y + z
        })

x = co(15)
y = co(1,2,3)
z = co()
print(x,y,z)

