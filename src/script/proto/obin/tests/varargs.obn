fn p(...rest) {
    print(rest)
}

v1 = [1,2,3]
v2 = [7,8]
v3 = [11,12,13,14,15,16,17,18,19,20]

p(...v1, 4,5,6, ...v2, 9, 10, ...v3, ...[21, 22], 23)

fn add2(...rest) {
    return add(1, ...rest)
}

fn add(x,y,z) {
    print(x,y,z)
    return x + y + z
}

A = [3]
add2(2,...A)
// Here args must be empty list
fn wrap(cb, ...args) {
    cb(...args)
}

wrap(fn(x, ...args) {
    print(x, args)
}, 1)


fn fv(x, y, z, ...r) {
    A = [10,11,12,14]
    fn _f(w,t) {
        print(w, t, ...r, x, y, z, ...A)

        print(w, t, x, y, z, r)
    }
    _f(x+y, y+z)
    r
}

a = fv(1,2,3,4,5,6,7,8)

b = [11,12,13]

print(1,2,3,...a, 9, 10, ...b)
a = fv(1,2,3,...a, 9, 10, ...b)
print(a.length())
print(a)
