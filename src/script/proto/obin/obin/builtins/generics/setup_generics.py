from obin.types import api
from obin.types import space


def setup(process, module, stdlib):
    _install(process, module, stdlib)


def _install(process, module, stdlib):
    generics = stdlib.generics
    # ---------------AUTOGENERATED---------------------
    api.put(module, generics.uplus.name, generics.uplus)
    api.put(module, generics.uminus.name, generics.uminus)
    api.put(module, generics.not_.name, generics.not_)
    api.put(module, generics.eq.name, generics.eq)
    api.put(module, generics.ne.name, generics.ne)
    api.put(module, generics.in_.name, generics.in_)
    api.put(module, generics.notin.name, generics.notin)
    api.put(module, generics.compare.name, generics.compare)
    api.put(module, generics.add.name, generics.add)
    api.put(module, generics.sub.name, generics.sub)
    api.put(module, generics.mul.name, generics.mul)
    api.put(module, generics.div.name, generics.div)
    api.put(module, generics.mod.name, generics.mod)
    api.put(module, generics.gt.name, generics.gt)
    api.put(module, generics.ge.name, generics.ge)
    api.put(module, generics.le.name, generics.le)
    api.put(module, generics.lt.name, generics.lt)
    api.put(module, generics.bitnot.name, generics.bitnot)
    api.put(module, generics.bitor.name, generics.bitor)
    api.put(module, generics.bitxor.name, generics.bitxor)
    api.put(module, generics.bitand.name, generics.bitand)
    api.put(module, generics.lsh.name, generics.lsh)
    api.put(module, generics.rsh.name, generics.rsh)
    api.put(module, generics.ursh.name, generics.ursh)
    api.put(module, generics.cons.name, generics.cons)
    api.put(module, generics.concat.name, generics.concat)


# def _specify(process, module, stdlib):
#     from obin.types.dispatch.generic import specify_single
#     from obin.types.space import newtuple, newnativefunc, newsymbol
#     generics = stdlib.generics
#     traits = stdlib.traits
#     # DEPRECATED
