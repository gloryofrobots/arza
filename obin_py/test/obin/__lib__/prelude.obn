import from obin:core:types (Bool, Char, Int, Float, Symbol, String, List, Vector, Tuple, Map,
                             Function, Generic, Method, NativeFunction, Fiber, Trait, Datatype, TVar, Env)

prefix - negate
infixl < < 50
infixl > > 50
infixl >= >= 50
infixl <= <= 50
infixl == == 50
infixl != != 50
infixl + + 60
infixl - - 60
infixl * * 65
infixl / / 65
infixl ++ ++ 70




//fun t  x . y ->
////    f 331 332 334 .
////      (g 441 442 .
////         443 444) . 551 . 552 553 .
////       554
//end

type LT
type GT
type EQ
//
trait Collection for self
    def len self
    def is_empty self
    def put key value self
    def at key self
    def del obj self
    def elem key self
---------------------------------

trait Eq for x
    def == x y -> throw (#NotImplemented, x, y)
    def != x y -> not (x == y)
---------------------------------

trait Ord  for x of Eq
    def <= x y -> throw (#NotImplemented, x, y)
    def < x y -> (cmp x y) == LT
    def >= x y -> (cmp x y) != LT
    def > x y -> (cmp x y) == GT

    def cmp x y ->
                if x == y -> EQ
                elif x <= y -> LT
                else -> GT
                --------------

    def max x y ->  y in_case x <= y else x
    def min x y -> x in_case x <= y else y
---------------------------------

trait Num for x
    def - x y
    def + x y
    def * x y
    def / x y
    def mod x y
    // unary -
    def negate x
---------------

trait Str for self
    def str self
---

//YOU need kinds here
//trait FromStr for self of ToStr
//    def from_str self
//---

trait Inspectable for self of Str
    def inspect self -> str self
---

trait Mappable for self
    def map f self
---

trait Appendable for self
    //concat operator
    def ++ self other
    def append self value
---------------------------------


trait Dict for self of Collection
    def keys self
    def values self
------

trait Seq for self
    def first self
    def rest self
    // prepend/cons operator
    def cons  value self
    def empty self
---

trait Indexed for self
    def index_of obj self
---

trait Seqable for self
    def seq self
---

trait Sliceable for self
    def slice first . last . self
    def drop count self
    def take count self
---

//ERRORS
//TODO MAKE THIS DECLARATION ONE MACRO
type ImportError args end
type RuntimeError args end
type TypeError args end
type NotImplementedError args end
type ZeroDivisionError args end
type ReferenceError args end
type ConstructorError args end
type KeyError args end
type ValueError args end
type SliceError args end
type IndexError args end
type InvokeError args end
type InvalidArgCount args end
type MethodInvokeError args end
type MethodNotImplementedError args end
type MethodSpecializeError args end
type CompileError args end
type ParseError args end
type UnpackSequenceError args end
type FiberFlowError args end
type MatchError args end
type FunctionArgumentsMatchError args end
type ExceptionMatchError args end
type ExportError args end
type TraitAlreadyImplementedError args end
type TraitImplementationError args end
type TraitConstraintError args end

//FUNS
fun lookup key default coll ->
    try
        at key coll
    catch
        | e of KeyError -> default
        | e -> throw e
    ---------------
---

fun not_elem x c -> not (elem x c) end