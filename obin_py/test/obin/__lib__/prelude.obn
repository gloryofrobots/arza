import from obin:core:types (Bool, Char, Int, Float, Symbol, String, List, Vector, Tuple, Map,
                             Function, Generic, Method, NativeFunction, Fiber, Trait, Datatype, TVar, Env)

prefix - negate
infixl < < 50
infixl > > 50
infixl >= >= 50
infixl <= <= 50
infixl == == 50
infixl != != 50
infixl + + 60
infixl - - 60
infixl * * 65
infixl / / 65
infixr :: cons 70
infixl ++ ++ 70


//fun t  x . y ->
////    -5 - (-9)
////    -5 - -9
//    (-5 - -9)
////
////    f 331 332 334 .
////      (g 441 442 .
////         443 444) . 551 . 552 553 .
////       554
//end

//
//
//
//

type LT
type GT
type EQ

trait Collection for self
    method len self
    method is_empty self
    method put key value self
    method at key self
    method del obj self
    method elem key self
---------------------------------

trait Eq for x
    method == x y -> throw (#NotImplemented, x, y)
    method != x y -> not (x == y)
---------------------------------

trait Ord  for x of Eq
    method <= x y -> throw (#NotImplemented, x, y)
    method < x y -> (cmp x y) == LT
    method >= x y -> (cmp x y) != LT
    method > x y -> (cmp x y) == GT

    method cmp x y ->
                cond
                | x == y -> EQ
                | x <= y  -> LT
                | else -> GT
                ---

    method max x y -> y if x <= y else x
    method min x y -> x if x <= y else y
---------------------------------

trait Num for x
    method - x y
    method + x y
    method * x y
    method / x y
    method mod x y
    // unary -
    method negate x
---------------

trait Str for self
    method str self
---

//YOU need kinds here
//trait FromStr for self of ToStr
//    method from_str self
//---

trait Inspectable for self of Str
    method inspect self -> str self
---

trait Mappable for self
    method map f self
---

trait Appendable for self
    //concat operator
    method ++ self other
    method append self value
---------------------------------


trait Dict for self of Collection
    method keys self
    method values self
------

trait Seq for self
    method first self
    method rest self
    // prepend/cons operator
    method cons value self
---

trait Indexed for self
    method index_of obj self
---

trait Seqable for self
    method seq self
---

trait Sliceable for self
    method slice first last self
    method drop count self
    method take count self
---

in = elem
//notin = in
fun notin obj storage -> not (obj `elem` storage) end

fun :: val self -> cons val self end


//TODO FIX IT
length = obin:lang:length
