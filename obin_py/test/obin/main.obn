import affirm
//import tests:test_operators
//
import tests:test_co
import tests:test_destruct
import tests:test_exception
import tests:test_modify
import tests:test_operator_override
import tests:test_module
import tests:test_match
import tests:test_base
import tests:test_bool
import tests:datastructs:test_datastructs
import tests:types:test_types
import tests:test_static_refs
import tests:test_fun

import list

fun log ...msgs ->
    cond
    | True -> apply print msgs
    | else -> ()
    ---
---

fun test() ->
    log "RUN TESTS"

    log "TEST TYPES"
    test_types:test()

    log "TEST DATASTRUCTS"
    test_datastructs:test()
    log "TEST BOOL"
    test_bool:test()
    log "TEST MATCH"
    test_match:test()
    log "TEST BASE"
    test_base:test()
    log "TEST DESTRUCT"
    test_destruct:test()
    log "TEST STATIC REFS"
    test_static_refs:test()
    log "TEST  CO"
    test_co:test()
    log "TEST EXCEPTION"
    test_exception:test()
    log "TEST MODIFY"
    test_modify:test()
    log "TEST OP OVERRIDE"
    test_operator_override:test()
    log "TEST MODULE"
    test_module:test()
    log "TEST FUN"
    test_fun:test()

//    log "TEST OPERATORS"
//    test_operators:test()
---

fun add x y -> x + y end

fun main () ->
    //shift
//    list:foldl [1,2,3,4,5] 4
//    list:foldl _ 4

//    (/ 2) 3 == 3 / 2
//    (_ / 2)

    test()
-------------------------

