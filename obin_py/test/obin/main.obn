import affirm
//import tests:test_operators

import tests:test_static_refs
import tests:test_co
import tests:test_destruct
import tests:test_exception
import tests:test_fun
import tests:test_modify
import tests:test_operator_override
import tests:test_module
import tests:test_match
import tests:test_base
import tests:test_bool
import tests:datastructs:test_datastructs
import tests:types:test_types

//trait X for self
//    method xxx self
//---
//
//trait Y for self of X
//    method yyy self -> xxx self
//    method zzz self
//---
//
//type A val end
//
//implement X for A
//    method xxx self -> self.val + 42
//---
//
//implement Y for A
//    method zzz self -> yyy self
//---

fun log ...msgs ->
    cond
    | False -> apply print msgs
    | else -> ()
    ---
---

fun test() ->
    log "RUN TESTS"

    log "TEST TYPES"
    test_types:test()

    log "TEST DATASTRUCTS"
    test_datastructs:test()
    log "TEST BOOL"
    test_bool:test()
    log "TEST MATCH"
    test_match:test()
    log "TEST BASE"
    test_base:test()
    log "TEST DESTRUCT"
    test_destruct:test()
    log "TEST STATIC REFS"
    test_static_refs:test()
    log "TEST  CO"
    test_co:test()
    log "TEST EXCEPTION"
    test_exception:test()
    log "TEST FUN"
    test_fun:test()
    log "TEST MODIFY"
    test_modify:test()
    log "TEST OP OVERRIDE"
    test_operator_override:test()
    log "TEST MODULE"
    test_module:test()

//    test_operators:test()
---


fun main () ->
    test()
-------------------------

