import affirm

fun test () ->
    (x,y,z) = (1,2,3)
    affirm:is_equal (x,y,z) (1,2,3)

    // tuples can't be matched on lists
    affirm:is_throw lam () -> (a,b,c,d) = [4,5,6,7] end ()
    affirm:is_throw lam () -> [a,b,c] = (1,2,3) end ()

    ///////////////////////////////////////////

    metadata = {
        title= "Nemesis Games",
        subject= "SCIFI",
        translationsUa={title="IGRU DOLI", translator="PILIP LUN" },
        translationsEn={ titleEn=("GAMES OF NEMESIS", "NEMESIS GAMES"), translatorEn="Jhon DOU" },
        author= ("James", "Corey")
    }

    affirm:is_equal (metadata.title,
                     metadata.subject, metadata.translationsUa.("title"), metadata.translationsUa.translator,
                     metadata.translationsEn.titleEn,  metadata.translationsEn.translatorEn, metadata.author) .
                    ("Nemesis Games", "SCIFI", "IGRU DOLI", "PILIP LUN",
                     ("GAMES OF NEMESIS", "NEMESIS GAMES"), "Jhon DOU", ("James", "Corey"))
    {
        #title=englishTitle,
        subject,
        translationsUa={ #title=localeTitle, translator },
        translationsEn={ titleEn=(localeTitleEn, origTitleEn), translatorEn },
        author=author_data
    } = metadata

    affirm:is_equal (englishTitle, subject, localeTitle,
                    translator,(localeTitleEn, origTitleEn), translatorEn, author_data) .
                    ("Nemesis Games", "SCIFI", "IGRU DOLI", "PILIP LUN",
                     ("GAMES OF NEMESIS", "NEMESIS GAMES"), "Jhon DOU", ("James", "Corey"))

    /////////////////////////////////////////
    lam () ->
        {a=[x,y,...z], B @ b="I am B", c of Float, D@d={e=(x,y,...zz)}} =
            {a=[1,2,3,4,5], b="I am B", c=3.14, d={e=(1,2,3,4,5)}}

        affirm:is_equal (a, B, D, e, x, y, z, zz) ([1,2,3,4,5],
            "I am B", {e=(1,2,3,4,5)}, (1,2,3,4,5), 1, 2, [3,4,5], (3,4,5)) end ()


